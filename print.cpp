#include <iostream>
#include <Windows.h>
#include <thread>
#include <string>

#define ASLR(x)(x - 0x400000)

using namespace std;
void console(const char* title);

void main() {
    console("Prrr");

    typedef int(__cdecl* printf)(int, const char*, ...);
    printf print = reinterpret_cast<printf>(reinterpret_cast<std::uintptr_t>(GetModuleHandle(nullptr)) + ASLR(0x10570C0));

    string typ;
    string pr;
    bool t = true;

    cout << "*************************START**********************\n";
    cout << "Types are, normal = 0, info = 1, warn = 2, error = 3\n";
    do {
        cout << "Text: ";
        getline(cin, pr);
        const char* v = pr.c_str();
        bool valid_input = false;
        while (!valid_input) {
            cout << "Type: ";
            getline(cin, typ);
            if (typ[0] == '0') {
                print(0, v);
                valid_input = true;
            }
            else if (typ[0] == '1') {
                print(1, v);
                valid_input = true;
            }
            else if (typ[0] == '2') {
                print(2, v);
                valid_input = true;
            }
            else if (typ[0] == '3') {
                print(3, v);
                valid_input = true;
            }
            else {
                cout << "Please Enter A Valid Type Number\n";
                Sleep(1000);
            }
        }

    } while (t);

}



void console(const char* title) {
    DWORD old;
    VirtualProtect(reinterpret_cast <PVOID> (&FreeConsole), 1, PAGE_EXECUTE_READWRITE, &old);
    *reinterpret_cast <std::uint8_t*> (&FreeConsole) = 0xC3;
    VirtualProtect(&FreeConsole, 1, old, &old);
    AllocConsole();
    SetConsoleTitleA(title);
    FILE* file_stream;
    freopen_s(&file_stream, "CONOUT$", "w", stdout);
    freopen_s(&file_stream, "CONOUT$", "w", stderr);
    freopen_s(&file_stream, "CONIN$", "r", stdin);
}

BOOL __stdcall DllMain(HINSTANCE Dll, DWORD Reason, LPVOID Reserved) {
    if (Reason == DLL_PROCESS_ATTACH) {
        CreateThread(0, 0, (LPTHREAD_START_ROUTINE)main, 0, 0, 0);
    }
    return TRUE;
}
